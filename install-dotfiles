#!/bin/zsh

DRY_RUN="${DRY_RUN:-0}"
IUSER="${1:-${USER:-root}}"
HOME_DIR="$(getent passwd "$IUSER" | cut -d: -f6)"
SCRIPT=$(readlink -f "$0")
SOURCE_FOLDER=$(dirname "$SCRIPT")

if [ -z "$(command -v zsh)" ]; then
    echo "Warning: You do not have zsh installed"
    echo "Use package manager to install zsh and use dotfiles zsh part"
fi

do_install() {
    local exit_code=0
    local installable_name="$1"
    local source_file="$(realpath "${installable_name}")"
    local source_file_relative_to_source_dir="$(realpath --relative-to $SOURCE_FOLDER $source_file)"
    local destination_file="$(realpath "${HOME_DIR}/${source_file_relative_to_source_dir/%.symlink/}")"

    echo "Linking '$source_file' to '$destination_file'"

    if [[ "$DRY_RUN" -eq 0 ]]; then
        ln -s "$source_file" "$destination_file"
        exit_code="$?"
        printf "%s\n" "$destination_file" >>"$DOTFILES_INSTALLED_FILE_PATH"
    fi

    return $exit_code
}

set -o no_unset
# set -o xtrace

DOTFILES_CONFIG_DIR="$HOME_DIR/.config/dotfiles"
mkdir -p "$DOTFILES_CONFIG_DIR"
DOTFILES_UNINSTALL_DOTFILES_SCRIPT_PATH="${DOTFILES_CONFIG_DIR}/uninstall_dotfiles.sh"
DOTFILES_INSTALLED_FILE_PATH="${DOTFILES_CONFIG_DIR}/installed"

function _call_uninstall_dotfiles() {
    if [[ -f "$DOTFILES_UNINSTALL_DOTFILES_SCRIPT_PATH" ]]; then
        source "$DOTFILES_UNINSTALL_DOTFILES_SCRIPT_PATH"
        if ! uninstall_dotfiles; then
            echo "Warning: something went wrong when uninstalling dotfiles"
        fi
    fi
}

if [[ -f "$DOTFILES_INSTALLED_FILE_PATH" ]]; then
    echo "Warning: You already have dotfiles installed"
    default_response='Y'
    read -r "response?Perform uninstall and install? [Y/n]"
    response=${response:-$default_response}
    if [[ $response != [Yy] && $response != [Yy][Ee][Ss] ]]; then
        echo "You answered '${response}', exiting..."
        exit 0
    fi
    _call_uninstall_dotfiles
fi

cat >"${DOTFILES_UNINSTALL_DOTFILES_SCRIPT_PATH}" <<END
#!/bin/zsh
function uninstall_dotfiles() {
    if [[ -f ${DOTFILES_INSTALLED_FILE_PATH} ]]; then
        for installable in \$(cat "${DOTFILES_INSTALLED_FILE_PATH}"); do
            if [ -L \$installable ]; then
                echo "Unlinking installed file from '\$installable'"
                unlink \$installable;
            fi
        done
        rm ${DOTFILES_INSTALLED_FILE_PATH}
        return 0
    fi
    return 1
}
END

touch "$DOTFILES_INSTALLED_FILE_PATH"

echo "Installing dotfiles for user $IUSER into $HOME_DIR"

local needs_reverting=0

while IFS= read -r -d '' installable; do
    if ! do_install "$installable"; then
        needs_reverting=1
        printf "Installation of file $installable failed, reverting..."
        break
    fi
done < <(find "$SOURCE_FOLDER" -maxdepth 1 -name '*.symlink' -print0)

if [[ $needs_reverting -ne 0 ]]; then
    _call_uninstall_dotfiles
fi

set +o unset
set +o xtrace